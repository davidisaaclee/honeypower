// Generated by CoffeeScript 1.9.2
(function() {
  var Model, Vector2, _,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _ = require('lodash');

  Model = require('../Model');


  /*
  Represents a 2D vector.
  
  Vector2 ::=
    x: Number
    y: Number
   */

  Vector2 = (function(superClass) {
    extend(Vector2, superClass);

    function Vector2() {
      return Vector2.__super__.constructor.apply(this, arguments);
    }

    Vector2.make = function(x, y) {
      return _.assign(new Vector2(), {
        x: x,
        y: y
      });
    };

    Vector2.zero = Object.freeze(Vector2.make(0, 0));

    Vector2.add = function(v1, v2) {
      return Vector2.make(v1.x + v2.x, v1.y + v2.y);
    };

    Vector2.subtract = function(v1, v2) {
      return Vector2.add(v1, Vector2.negate(v2));
    };

    Vector2.scale = function(v, n) {
      return Vector2.make(v.x * n, v.y * n);
    };

    Vector2.negate = function(v) {
      return Vector2.make(-v.x, -v.y);
    };

    Vector2.piecewiseMultiply = function(v1, v2) {
      return Vector2.make(v1.x * v2.x, v1.y * v2.y);
    };

    return Vector2;

  })(Model);

  module.exports = Vector2;

}).call(this);

//# sourceMappingURL=Vector2.js.map
