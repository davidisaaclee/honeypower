// Generated by CoffeeScript 1.9.2
(function() {
  var Entity, Model, Prototype, _,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _ = require('lodash');

  Model = require('./Model');

  Entity = require('./entities/Entity');


  /*
  Encapsulates an `Entity` for stamping/reuse.
  
  Prototype ::=
    name: String
    entity: Entity
   */

  Prototype = (function(superClass) {
    extend(Prototype, superClass);

    function Prototype() {
      return Prototype.__super__.constructor.apply(this, arguments);
    }

    Prototype.make = function(name, entity) {
      return _.assign(new Prototype(), {
        name: name,
        entity: entity
      });
    };

    Prototype.stamp = function(proto, name) {
      return Entity.make(name, proto.entity.transform, proto.entity.children, proto);
    };

    Prototype.getDefinition = function(proto) {
      return proto.entity;
    };

    return Prototype;

  })(Model);

  module.exports = Prototype;

}).call(this);

//# sourceMappingURL=Prototype.js.map
